01. 有5个元素，其入栈次序为A,B,C,D,E，在各种可能的出栈次序中，第一个出栈元素为C且第二个出栈元素为D的出栈序列有哪几个?	• CD出栈后状态：<strong>栈内元素为A、B</strong>，E未入栈<br>• 三种序列：CDEBA（E进栈后出栈）、CDBEA（B出栈后E进栈）、CDBAE（B和A出栈后E进栈）	75
02. 若元素的进栈序列为A,B,C,D,E，运用栈操作，能否得到出栈序列B,C,A,E,D和D,B,A,C,E?为什么?	 <strong>能得到BCAED</strong>：A进→B进→B出→C进→C出→A出→D进→E进→E出→D出<br>• <strong>不能得到DBACE</strong>：D首出时栈内必有A,B,C，此时C在栈顶，B和A不能先于C出栈	75
03.1 判断操作序列合法性：<br>A. IOIIOIOO<br>B. IOIOIIOO<br>C. IIIOIOIO<br>D. IIIIOOO	• A合法：栈状态变化正常<br>• B非法：<strong>连续两次出栈时栈空</strong>（执行第二次O时栈空）<br>• C非法：入栈出栈<strong>次数不匹配</strong>（结束时栈非空）<br>• D合法	75
03.2 设计算法判断由'I'（入栈）和'O'（出栈）组成的操作序列是否合法	算法设计：<br>1. 初始化计数器 count=0<br>2. 遍历序列：<br>   • 遇'I'：<code>count++</code><br>   • 遇'O'：<code>count--</code>，若count<0则返回false<br>3. 最终若count=0返回true，否则false<br>关键：任何时刻 <anki-mathjax>count \geq 0</anki-mathjax> 且最终为0	75
04. 判断单链表（表头指针L）的n个字符是否中心对称（如xyx）	算法步骤：<br>1. 链表前一半字符<strong>入栈</strong><br>2. 处理后一半字符：依次与<strong>出栈元素比较</strong><br>3. 比较规则：<br>   • 全部相等且栈空 → 对称<br>   • 出现不等或栈未空 → 不对称<br>时间复杂度：<anki-mathjax>O(n)</anki-mathjax>，空间复杂度：<anki-mathjax>O(n/2)</anki-mathjax>	76
05. 设计两个栈（S1、S2）共享存储区[0,maxsize-1]的入栈出栈操作，采用栈顶相向增长方式	核心算法：<br>• <strong>入栈操作</strong>：<br>  - 检查栈号有效性（0或1）<br>  - 判满条件：<code>top0+1 == top1</code><br>  - S1：<code>stack[++top0] = x</code><br>  - S2：<code>stack[--top1] = x</code><br>• <strong>出栈操作</strong>：<br>  - 判空条件：<br>    * S1：<code>top0 == -1</code><br>    * S2：<code>top1 == maxsize</code><br>  - S1：返回<code>stack[top0--]</code><br>  - S2：返回<code>stack[top1++]</code>	77