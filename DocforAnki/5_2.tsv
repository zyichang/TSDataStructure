[01.下列关于二叉树的说法中，正确的是( )。<br>A. 度为2的有序树就是二叉树<br>B.  含有n个结点的二叉树的高度为<anki-mathjax>\lfloor\log n\rfloor+1</anki-mathjax><br>C. 在完全二叉树中，若一个结点没有左孩子，则它必是叶结点<br>D. 含有n个结点的完全二叉树的高度为<anki-mathjax>\lceil\log n\rceil</anki-mathjax>]::(C)	在二叉树中，若某个结点只有一个孩子，则其左右次序确定；而在度为2的有序树中则无须区分<br>选项B仅对完全二叉树有意义，一般二叉树高度可能为<anki-mathjax>\lfloor\log_2n\rfloor+1</anki-mathjax><br><strong>完全二叉树中无左孩子的结点必是叶结点</strong><br>完全二叉树高度应为<anki-mathjax>\lfloor\log_2(n+1)\rfloor</anki-mathjax>或<anki-mathjax>\lfloor\log_2n\rfloor+1</anki-mathjax>	137
[02."二叉树为空"意味着二叉树()。<br>A. 根结点没有子树<br>B.  不存在<br>C. 没有结点<br>D. 由一些没有赋值的空结点构成]::(C)	"空树"指<strong>结点数为0</strong>，类比空线性表（数据结构存在但无元素）	138
[03.以下说法中，正确的是()。<br>A. 在完全二叉树中，叶结点的双亲的左兄弟(若存在)一定不是叶结点<br>B.  任何一棵二叉树中，叶结点数为度为2的结点数减1<br>C. 完全二叉树不适合顺序存储结构<br>D. 结点按完全二叉树层序编号，第i个结点的左孩子编号为2i]::(A)	叶结点的双亲的左兄弟的孩子必存在（非叶结点）<br>正确公式应为<anki-mathjax>n_0 = n_2 + 1</anki-mathjax><br>完全二叉树<strong>适合顺序存储</strong><br>第i个结点的左孩子不一定存在	138
[04.具有10个叶结点的二叉树中有()个度为2的结点。<br>A. 8<br>B. 9<br>C. 10<br>D. 11]::(B)	由<strong><anki-mathjax>n_0 = n_2 + 1</anki-mathjax></strong>得：<anki-mathjax>n_2 = n_0 - 1 = 9</anki-mathjax>	138
[05.设高度为h的二叉树上只有度为0和2的结点，则此类二叉树中所包含的结点数至少为()。<br>A. h<br>B. 2h-1<br>C. 2h+1<br>D. h+1]::(B)	结构：根结点+其余层各2结点<br>结点数<anki-mathjax>=1 + 2(h-1) = 2h-1</anki-mathjax>	138
[06.具有n个结点且高度为n的二叉树的数目为()。<br>A. <anki-mathjax>\log n</anki-mathjax><br>B. n/2<br>C. n<br>D. <anki-mathjax>2^{n-1}</anki-mathjax>]::(D)	除根结点外，每个结点有<strong>左/右分支2种选择</strong>：<anki-mathjax>2^{n-1}</anki-mathjax>种形态	138
[07.假设一棵二叉树的结点个数为50，则它的最小高度是()。<br>A. 4<br>B. 5<br>C. 6<br>D. 7]::(C)	最小高度对应<strong>完全二叉树</strong>：<anki-mathjax>\lfloor\log_250\rfloor+1=6</anki-mathjax>	138
[08.设二叉树有2n个结点，且m<n，则不可能存在()的结点。<br>A. n个度为0<br>B. 2m个度为0<br>C. 2m个度为1<br>D. 2m个度为2]::(C)	由<anki-mathjax>n_0 = n_2 + 1</anki-mathjax>得：<br><anki-mathjax>n_1 = 2(n - n_2) - 1</anki-mathjax>（必为<strong>奇数</strong>）	138
[09.一个具有1025个结点的二叉树的高h为()。<br>A. 11<br>B. 10<br>C. 11~1025<br>D. 10~1024]::(C)	最小高度（完全二叉树）：<anki-mathjax>\lfloor\log_21025\rfloor+1=11</anki-mathjax><br>最大高度（单支树）：1025	138
[10.设二叉树只有度为0和2的结点，其结点个数为15，则该二叉树的最大深度为()。<br>A. 4<br>B. 5<br>C. 8<br>D. 9]::(C)	结构特点：<br>第1层1结点，其余层各2结点<br><anki-mathjax>1+2(h-1)=15 \to h=8</anki-mathjax>	138
[11.高度为h的完全二叉树最少有()个结点。<br>A. 2h<br>B. 2h+1<br>C. 2h-1<br>D. 2h-1]::(C)	前h-1层满：<anki-mathjax>2^{h-1}-1</anki-mathjax><br>+第h层1结点：<anki-mathjax>2^{h-1}</anki-mathjax>	139
[12.已知一棵完全二叉树的第6层(设根为第1层)有8个叶结点，则完全二叉树的结点个数最少是()。<br>A. 39<br>B. 52<br>C. 111<br>D. 119]::(A)	高度=6时结点最少：<br>前5层满：<anki-mathjax>2^5-1=31</anki-mathjax><br>第6层8结点：31+8=39	139
[13.若一棵深度为6的完全二叉树的第6层有3个叶结点，则该二叉树共有()个叶结点。<br>A. 17<br>B. 18<br>C. 19<br>D. 20]::(A)	第6层3叶结点 → 第5层对应2结点非叶<br>第5层剩余14叶结点<br>总计14+3=17	139
[14.一棵完全二叉树上有1001个结点，其中叶结点的个数是()。<br>A. 250<br>B. 500<br>C. 254<br>D. 501]::(D)	分支结点数=<anki-mathjax>\lfloor1001/2\rfloor=500</anki-mathjax><br>叶结点数=1001-500=501	139
[15.若一棵二叉树有126个结点，在第7层(根结点在第1层)至多有()个结点。<br>A. 32<br>B. 64<br>C. 63<br>D. 不存在第7层]::(C)	前6层最多<anki-mathjax>2^6-1=63</anki-mathjax>结点<br>第7层最多126-63=63结点	139
[16.一棵有124个叶结点的完全二叉树，最多有()个结点。<br>A. 247<br>B. 248<br>C. 249<br>D. 250]::(B)	<anki-mathjax>n_0=124 \to n_2=123</anki-mathjax><br>总结点<anki-mathjax>n=247+n_1</anki-mathjax><br><anki-mathjax>n_1</anki-mathjax>最大为1 → n=248	143
[17.一棵有n个结点的二叉树采用二叉链存储结点，其中空指针数为()。<br>A. n<br>B. n+1<br>C. n-1<br>D. 2n]::(B)	空指针数=<anki-mathjax>2 \times \text{指针域} - \text{非空指针}</anki-mathjax><br><anki-mathjax>=2n - (n-1) = n+1</anki-mathjax>	143
[18.设有n(n≥1)个结点的二叉树采用三叉链表示，则下列说法中正确的是()。<br>I.树中空指针的数量为n+2<br>II.所有度为2的结点均被三个指针指向<br>III.每个叶结点均被一个指针所指向]::(A)	空指针数=<anki-mathjax>3n - (n-1) = 2n+1</anki-mathjax><br>根结点无指针指向 → II、III错误	143
[19.在一棵完全二叉树中，其根的序号为1，()可判定序号为p和q的两个结点是否在同一层。<br>A. <anki-mathjax>\lfloor\log p\rfloor=\lfloor\log q\rfloor</anki-mathjax><br>B. <anki-mathjax>\log p=\log q</anki-mathjax><br>C. <anki-mathjax>\lfloor\log p\rfloor+1=\lfloor\log q\rfloor</anki-mathjax><br>D. <anki-mathjax>\lfloor\log p\rfloor=\lfloor\log q\rfloor+1</anki-mathjax>]::(A)	层数公式：<anki-mathjax>\lfloor \log_2p \rfloor + 1 = \lfloor \log_2q \rfloor + 1</anki-mathjax>	143
[20.在一个用数组表示的完全二叉树中，根结点的下标为1，那么下标为17和19的结点的最近公共祖先的下标是()。<br>A. 1<br>B. 2<br>C. 4<br>D. 8]::(C)	17的祖先：8→4→2→1<br>19的祖先：9→4→2→1<br>公共祖先=4	143
[21.假定一棵三叉树的结点数为50，则它的最小高度为()。<br>A. 3<br>B. 4<br>C. 5<br>D. 6]::(C)	最小高度对应<strong>完全三叉树</strong>：<br><anki-mathjax>\frac{3^5-1}{2}=121>50 \to h_{\min}=5</anki-mathjax>	143
[22.具有n个结点的三叉树用三叉链表示，则树中空指针域的个数为()。<br>A. 3n+1<br>B. 2n+1<br>C. 3n-1<br>D. 3n]::(B)	空指针域=<anki-mathjax>3n - (n-1) = 2n+1</anki-mathjax>	143
[23.对于一棵满二叉树，共有n个结点和m个叶结点，高度为h，则()。<br>A. <anki-mathjax>n=h+m</anki-mathjax><br>B. <anki-mathjax>n+m=2h</anki-mathjax><br>C. <anki-mathjax>m=h-1</anki-mathjax><br>D. <anki-mathjax>n=2^{h}-1</anki-mathjax>]::(D)	高度h的满二叉树：<anki-mathjax>n=2^h-1, m=2^{h-1}</anki-mathjax>	143
[24.[2009统考真题]已知一棵完全二叉树的第6层有8个叶结点，则该完全二叉树的结点个数最多是()。<br>A. 39<br>B. 52<br>C. 111<br>D. 119]::(C)	高度=7时结点最多：<br>前6层满：<anki-mathjax>2^6-1=63</anki-mathjax><br>第7层结点：<anki-mathjax>(32-8)×2=48</anki-mathjax><br>总计63+48=111	143
[25.[2011统考真题]若一棵完全二叉树有768个结点，则该二叉树中叶结点的个数是()。<br>A. 257<br>B. 258<br>C. 384<br>D. 385]::(C)	分支结点数=<anki-mathjax>768/2=384</anki-mathjax><br>叶结点数=768-384=384	143
[26.[2018统考真题]设一棵非空完全二叉树T的所有叶结点均位于同一层，且每个非叶结点都有2个子结点。若T有k个叶结点，则T的结点总数是()。<br>A. 2k-1<br>B. 2k<br>C. <anki-mathjax>k^{2}</anki-mathjax><br>D. <anki-mathjax>2^{k}-1</anki-mathjax>]::(A)	即满二叉树：<anki-mathjax>n=2^{\log_2k+1}-1=2k-1</anki-mathjax>	143
[27.[2020统考真题]对于任意一棵高度为5且有10个结点的二叉树，若采用顺序存储结构保存，每个结点占1个存储单元，则存放该二叉树需要的存储单元数量至少是()。<br>A. 31<br>B. 16<br>C. 15<br>D. 10]::(A)	需按<strong>满二叉树空间分配</strong>：高度5需<anki-mathjax>2^5-1=31</anki-mathjax>单元	143
[28.[2022统考真题]若三叉树T中有244个结点(叶结点的高度为1)，则T的高度至少是()。<br>A. 8<br>B. 7<br>C. 6<br>D. 5]::(C)	高度5满三叉树：<anki-mathjax>\frac{3^5-1}{2}=121</anki-mathjax><br>高度6满三叉树：<anki-mathjax>\frac{3^6-1}{2}=364 \to h \geq 6</anki-mathjax>	143

01. 在一棵完全二叉树中，含有n0个叶结点，当度为1的结点数为1时，该树的高度是多少？当度为1的结点数为0时，该树的高度是多少？	由<anki-mathjax>n_0 = n_2 + 1</anki-mathjax>得<anki-mathjax>n_2 = n_0 - 1</anki-mathjax><br>总结点<anki-mathjax>n = 2n_0 + n_1 - 1</anki-mathjax><br>1. <anki-mathjax>n_1=1</anki-mathjax>时：<anki-mathjax>h = \lceil\log_2(2n_0+1)\rceil</anki-mathjax><br>2. <anki-mathjax>n_1=0</anki-mathjax>时：<anki-mathjax>h = \lceil\log_2n_0\rceil + 1</anki-mathjax>	139
02. 一棵有n个结点的满二叉树有多少个分支结点和多少个叶结点？该满二叉树的高度是多少？	满二叉树<anki-mathjax>n_1=0</anki-mathjax><br>叶结点数：<anki-mathjax>m = (n+1)/2</anki-mathjax><br>分支结点数：<anki-mathjax>n - m = (n-1)/2</anki-mathjax><br>高度：<anki-mathjax>h = \log_2(n+1)</anki-mathjax>	139
03. 已知完全二叉树的第9层有240个结点，则整个完全二叉树有多少个结点？有多少个叶结点？	前8层满：<anki-mathjax>2^8-1 = 255</anki-mathjax><br>总结点数：<anki-mathjax>255 + 240 = 495</anki-mathjax><br>第8层叶结点：<anki-mathjax>(256 - 240)/2 = 8</anki-mathjax><br>总叶结点：<anki-mathjax>8 + 240 = 248</anki-mathjax>	139
04. 一棵高度为h的满m叉树：<br>1)各层的结点个数是多少？<br>2)编号为i的结点的双亲结点编号？<br>3)编号为j的结点的第k个孩子编号？<br>4)编号为j的结点有右兄弟的条件？	1. 第k层结点数：<anki-mathjax>m^{k-1}</anki-mathjax><br>2. 双亲编号：<anki-mathjax>\lfloor (i-2)/m \rfloor + 1</anki-mathjax><br>3. 第k孩子：<anki-mathjax>(j-1)m + k + 1</anki-mathjax><br>4. 有右兄弟条件：<anki-mathjax>(j-1)\%m \neq 0</anki-mathjax>，右兄弟=<anki-mathjax>j+1</anki-mathjax>	140
05. 设计算法求顺序存储二叉树中编号i和j的结点的最近公共祖先结点的值	<code>ElemType Comm_Ancestor(SqTree T, int i, int j) {<br>&nbsp; while(i != j) {<br>&nbsp;&nbsp;&nbsp; if(i>j) i = i/2;<br>&nbsp;&nbsp;&nbsp; else j = j/2;<br>&nbsp; }<br>&nbsp; return T[i];<br>}</code><br>时间复杂度：<anki-mathjax>O(\log n)</anki-mathjax>	140
06.[2016统考真题]正则k叉树T：<br>1)有m个非叶结点时叶结点数？<br>2)高度h时的最多/最少结点数？	1. 叶结点数：<anki-mathjax>(k-1)m + 1</anki-mathjax><br>2. 最多结点：<anki-mathjax>\frac{k^h-1}{k-1}</anki-mathjax>（满k叉树）<br>3. 最少结点：<anki-mathjax>1 + (h-1)k</anki-mathjax>（单支树）	140