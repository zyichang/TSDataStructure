01. 从顺序表中删除具有最小值的元素(假设唯一)并由函数返回被删元素的值，空出的位值由最后一个元素填补，若顺序表为空，则显示出错信息并退出运行。	<strong>遍历顺序表</strong>找到最小值位置，用末尾元素覆盖空位，表长减1<br>时间复杂度：<anki-mathjax>O(n)</anki-mathjax>	23
02. 设计一个高效算法，将顺序表L的所有元素逆置，要求算法的空间复杂度为O(1)。	<strong>首尾元素两两交换</strong>向中间逼近<br>关键操作：<code>for(i=0;i<L.length/2;i++) swap(L.data[i], L.data[L.length-1-i])</code>	23
03. 对长度为n的顺序表L，编写一个时间复杂度为O(n)、空间复杂度为O(1)的算法，该算法删除线性表中所有值为x的数据元素。	<strong>双指针覆盖法</strong>：用k记录非x元素位置，前移覆盖无效元素<br>时间复杂度：<anki-mathjax>O(n)</anki-mathjax>	23
04. 从顺序表中删除其值在给定值s和t之间（包含s和t，要求s＜t）的所有元素，若s或t不合理或顺序表为空，则显示出错信息并退出运行。	遍历跳过[s,t]区间元素，<strong>后续元素前移覆盖</strong><br>边界处理：s≥t或表空时报错	23
05. 从有序顺序表中删除所有其值重复的元素，使表中所有元素的值均不同。	<strong>双指针去重法</strong>：i记录非重复位置，j扫描跳过重复项<br>时间复杂度：<anki-mathjax>O(n)</anki-mathjax>	25
06. 将两个有序顺序表合并为一个新的有序顺序表，并由函数返回结果顺序表。	<strong>归并思想</strong>：双指针取较小元素追加到新表<br>时间复杂度：<anki-mathjax>O(m+n)</anki-mathjax>	25
07. 已知在一维数组A[m+n]中依次存放两个线性表(a₁,a₂,…,aₘ)和(b₁,b₂,…,bₙ)。编写一个函数，将数组中两个顺序表的位置互换，即将(b₁,b₂,…,bₙ)放在(a₁,a₂,…,aₘ)的前面。	<strong>三步逆置法</strong>：1. 整体逆置 2. 前n部逆置 3. 后m部逆置<br>时间复杂度：<anki-mathjax>O(m+n)</anki-mathjax>	25
08. 线性表(a₁,a₂,…,aₙ)中的元素递增有序且按顺序存储于计算机内。要求设计一个算法，在最少时间找到值为x的元素，若找到，则将其与后继元素位置相交换，若找不到，则将其插入表中并使表中元素仍递增有序。	<strong>二分查找定位</strong>→交换/插入操作<br>时间复杂度：<anki-mathjax>O(\log n)</anki-mathjax>	25
09. 给定三个序列A、B、C，长度均为n，且均为无重复元素的递增序列，请设计一个时间上尽可能高效的算法，逐行输出同时存在于这三个序列中的所有元素。	<strong>三指针同步扫描</strong>：相等时输出，否则移动最小元素指针<br>时间复杂度：<anki-mathjax>O(n)</anki-mathjax>	未标注
10.【2010统考真题】设将n(n>1)个整数存放到一维数组R中，设计一个在时间和空间两方面都尽可能高效的算法。将R中保存的序列循环左移p(0<p<n)个位置，即将R中的数据由(X₀,X₁,…,Xₙ₋₁)变换为(Xₚ,Xₚ₊₁,…,Xₙ₋₁,X₀,X₁,…,Xₚ₋₁)。	<strong>三步逆置法</strong>：1. 逆置前p元素 2. 逆置后n-p元素 3. 整体逆置<br>时间复杂度：<anki-mathjax>O(n)</anki-mathjax>	27
11.【2011统考真题】一个长度为L(L≥1)的升序序列S，处在第⌈L/2⌉个位置的数称为S的中位数。现在有两个等长升序序列A和B，试设计一个在时间和空间两方面都尽可能高效的算法，找出两个序列A和B的中位数。	<strong>分治策略</strong>：比较中位数后舍弃无效区间<br>时间复杂度：<anki-mathjax>O(\log n)</anki-mathjax>	27
12.【2013统考真题】已知一个整数序列A=(a₀,a₁,…,aₙ₋₁)，其中0≤aᵢ<n(0≤i<n)。若存在aₚ₁=aₚ₂=…=aₚₘ=x且m>n/2(0≤pₖ<n,1≤k≤m)，则称x为A的主元素。请设计一个尽可能高效的算法，找出A的主元素。若存在主元素，则输出该元素；否则输出-1。	<strong>摩尔投票法</strong>：候选元素计数→验证频次>n/2<br>时间复杂度：<anki-mathjax>O(n)</anki-mathjax>	27
13.【2018统考真题】给定一个含n(n≥1)个整数的数组，请设计一个在时间上尽可能高效的算法，找出数组中未出现的最小正整数。	<strong>桶标记法</strong>：扫描标记[1,n+1]范围存在值<br>时间复杂度：<anki-mathjax>O(n)</anki-mathjax>	27
14.【2020统考真题】定义三元组(a,b,c)的距离D=|a-b|+|b-c|+|c-a|。给定3个非空整数集合S₁、S₂和S₃，按升序分别存储在3个数组中。请设计一个尽可能高效的算法，计算并输出所有可能的三元组(a,b,c)(a∈S₁,b∈S₂,c∈S₃)中的最小距离。	<strong>三指针法</strong>：计算三元组距离，移动最小元素指针<br>时间复杂度：<anki-mathjax>O(l₁+l₂+l₃)</anki-mathjax>	27