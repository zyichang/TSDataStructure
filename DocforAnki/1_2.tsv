[01. 一个算法应该是( )。<br>A. 程序<br>B. 问题求解步骤的描述<br>C. 要满足五个基本特性<br>D. A和C]::(B)	1. 算法是<strong>问题求解步骤的描述</strong>，程序是算法在计算机上的特定实现<br>2. 程序不一定满足有穷性（如操作系统），但算法必须有穷	6
[02. 某算法的时间复杂度为<anki-mathjax>O(n^{2})</anki-mathjax>，则表示该算法的（ ）。<br>A. 问题规模<anki-mathjax>n^{2}</anki-mathjax><br>B. 执行时间等于<anki-mathjax>n^{2}</anki-mathjax><br>C. 执行时间与<anki-mathjax>n^{2}</anki-mathjax>成正比<br>D. 问题规模与<anki-mathjax>n^{2}</anki-mathjax>成正比]::(C)	时间复杂度<anki-mathjax>T(n)=O(n^{2})</anki-mathjax>表示<strong>执行时间与<anki-mathjax>n^{2}</anki-mathjax>成正比</strong>，问题规模仍为<anki-mathjax>n</anki-mathjax>	6
[03. 若某算法的空间复杂度为<anki-mathjax>O(1)</anki-mathjax>，则表示该算法（ ）。<br>A. 不需要任何辅助空间<br>B. 所需辅助空间大小与问题规模<anki-mathjax>n</anki-mathjax>无关<br>C. 不需要任何空间<br>D. 所需空间大小与问题规模<anki-mathjax>n</anki-mathjax>无关]::(B)	<strong>空间复杂度<anki-mathjax>O(1)</anki-mathjax></strong>表示所需辅助空间是常量，<strong>与问题规模无关</strong>	6
[04. 下列关于时间复杂度的函数中，时间复杂度最小的是（ ）。<br>A. <anki-mathjax>T(n)=n\log n+5000n</anki-mathjax><br>B. <anki-mathjax>T_{2}(n)=n^{2}-8000n</anki-mathjax><br>C. <anki-mathjax>T_{3}(n)=n\log n-6000n</anki-mathjax><br>D. <anki-mathjax>T_{4}(n)=20000\log n</anki-mathjax>]::(D)	比较最高阶：<br>1. A/C为<anki-mathjax>O(n\log n)</anki-mathjax><br>2. B为<anki-mathjax>O(n^{2})</anki-mathjax><br>3. D为<anki-mathjax>O(\log n)</anki-mathjax>，复杂度最低	6
[05. 以下算法的时间复杂度为（ ）。<br>void fun(int n) {<br>int i=1;<br>while(i<=n)<br>i=i*2;<br>}<br>A. <anki-mathjax>O(n)</anki-mathjax><br>B. <anki-mathjax>O(n^{2})</anki-mathjax><br>C. <anki-mathjax>O(n\log n)</anki-mathjax><br>D. <anki-mathjax>O(\log n)</anki-mathjax>]::(D)	基本语句<code>i=i*2</code>执行次数<anki-mathjax>t</anki-mathjax>满足<anki-mathjax>2^{t}\leq n</anki-mathjax><br>即<anki-mathjax>t\leq\log_{2}n</anki-mathjax>，故<anki-mathjax>T(n)=O(\log n)</anki-mathjax>	6
[06. 有以下算法，其时间复杂度为（ ）。<br>void fun(int n) {<br>int i=0;<br>while(i*i*i<=n)<br>i++;<br>}<br>A. <anki-mathjax>O(n)</anki-mathjax><br>B. <anki-mathjax>O(n\log n)</anki-mathjax><br>C. <anki-mathjax>O(\sqrt[3]{n})</anki-mathjax><br>D. <anki-mathjax>O(\sqrt{n})</anki-mathjax>]::(C)	基本语句<code>i++</code>执行次数<anki-mathjax>t</anki-mathjax>满足<anki-mathjax>t^{3}\leq n</anki-mathjax><br>即<anki-mathjax>t\leq\sqrt[3]{n}</anki-mathjax>，故<anki-mathjax>T(n)=O(\sqrt[3]{n})</anki-mathjax>	6
[07. 程序段如下:<br>for(i=n-1;i>1;i--)<br>for(j=1;j<i;j++)<br>if(A[j]>A[j+1]) A[j]与A[j+1]对换;<br>A. <anki-mathjax>O(n)</anki-mathjax><br>B. <anki-mathjax>O(n\log n)</anki-mathjax><br>C. <anki-mathjax>O(n^{3})</anki-mathjax><br>D. <anki-mathjax>O(n^{2})</anki-mathjax>]::(D)	最坏情况下（冒泡排序完全逆序）：<br>语句频度<anki-mathjax>\sum_{i=2}^{n-1}(i-1)=O(n^{2})</anki-mathjax>	7
[08. 下列程序段的时间复杂度为（ ）。<br>if(n>=0)<br>for(int i=0;i<n;i++)<br>for(int j=0;j<n;j++)<br>printf("输入数据大于或等于零\n");<br>else<br>for(int j=0;j<n;j++)<br>printf("输入数据小于零\n");<br>A. <anki-mathjax>O(n)</anki-mathjax><br>B. <anki-mathjax>O(n^{2})</anki-mathjax><br>C. <anki-mathjax>O(1)</anki-mathjax><br>D. <anki-mathjax>O(n\log n)</anki-mathjax>]::(B)	取分支路径最大时间复杂度：<br>1. n≥0时<anki-mathjax>O(n^{2})</anki-mathjax><br>2. n<0时<anki-mathjax>O(n)</anki-mathjax><br>整体<anki-mathjax>O(n^{2})</anki-mathjax>	7
[09. 以下算法中加下画线的语句的执行次数为（ ）。<br>int m=0,i,j;<br>for(i=1;i<=n;i++)<br>for(j=1;j<=2*i;j++)<br>m++;<br>A. <anki-mathjax>n(n+1)</anki-mathjax><br>B. <anki-mathjax>n</anki-mathjax><br>C. <anki-mathjax>n+1</anki-mathjax><br>D. <anki-mathjax>n^{2}</anki-mathjax>]::(A)	执行次数：<anki-mathjax>\sum_{i=1}^{n}\sum_{j=1}^{2i}1 = \sum_{i=1}^{n}2i = n(n+1)</anki-mathjax>	7
[10. 下列函数代码的时间复杂度是（ ）。<br>int Func(int n) {<br>if(n==1) return 1;<br>else return 2*Func(n/2)+n;<br>}<br>A. <anki-mathjax>O(n)</anki-mathjax><br>B. <anki-mathjax>O(n\log n)</anki-mathjax><br>C. <anki-mathjax>O(\log n)</anki-mathjax><br>D. <anki-mathjax>O(n^{2})</anki-mathjax>]::(C)	递归树深度<anki-mathjax>t</anki-mathjax>满足<anki-mathjax>n/2^t=1</anki-mathjax>，即<anki-mathjax>t=\log_{2}n</anki-mathjax><br>每次递归<anki-mathjax>O(1)</anki-mathjax>，总体<anki-mathjax>O(\log n)</anki-mathjax>	7
[11. 【2011统考真题】设n是描述问题规模的非负整数，下列程序段的时间复杂度是（ ）。<br>x=2;<br>while(x<n/2)<br>x=2*x;<br>A. <anki-mathjax>O(\log_{2}n)</anki-mathjax><br>B. <anki-mathjax>O(n)</anki-mathjax><br>C. <anki-mathjax>O(n\log_{2}n)</anki-mathjax><br>D. <anki-mathjax>O(n^{2})</anki-mathjax>]::(A)	基本语句<code>x=2*x</code>执行次数<anki-mathjax>t</anki-mathjax>满足<anki-mathjax>2^{t+1} < n/2</anki-mathjax><br>即<anki-mathjax>t < \log_{2}n-2</anki-mathjax>，故<anki-mathjax>T(n)=O(\log n)</anki-mathjax>	7
[12. 【2012统考真题】求整数n(n≥0)的阶乘的算法如下，其时间复杂度是（ ）。<br>int fact(int n) {<br>if(n<=1) return 1;<br>return n*fact(n-1);<br>}<br>A. <anki-mathjax>O(\log_{2}n)</anki-mathjax><br>B. <anki-mathjax>O(n)</anki-mathjax><br>C. <anki-mathjax>O(n\log_{2}n)</anki-mathjax><br>D. <anki-mathjax>O(n^{2})</anki-mathjax>]::(B)	递归调用<anki-mathjax>n</anki-mathjax>次，每次<anki-mathjax>O(1)</anki-mathjax>操作<br>总体时间复杂度<anki-mathjax>O(n)</anki-mathjax>	7
[13. 【2014统考真题】下列程序段的时间复杂度是（ ）。<br>count=0;<br>for(k=1;k<=n;k*=2)<br>for(j=1;j<=n;j++)<br>count++;<br>A. <anki-mathjax>O(\log n)</anki-mathjax><br>B. <anki-mathjax>O(n)</anki-mathjax><br>C. <anki-mathjax>O(n\log n)</anki-mathjax><br>D. <anki-mathjax>O(n^{2})</anki-mathjax>]::(C)	外层循环执行<anki-mathjax>\lfloor \log_{2}n \rfloor+1</anki-mathjax>次<br>内层循环固定<anki-mathjax>n</anki-mathjax>次<br>总次数<anki-mathjax>n(\lfloor \log_{2}n \rfloor+1)=O(n\log n)</anki-mathjax>	7
[14. 【2017统考真题】下列函数的时间复杂度是（ ）。<br>int func(int n){<br>int i=0,sum=0;<br>while(sum<n) sum += ++i;<br>return i;<br>}<br>A. <anki-mathjax>O(\log n)</anki-mathjax><br>B. <anki-mathjax>O(n^{1/2})</anki-mathjax><br>C. <anki-mathjax>O(n)</anki-mathjax><br>D. <anki-mathjax>O(n\log n)</anki-mathjax>]::(B)	循环次数<anki-mathjax>t</anki-mathjax>满足<anki-mathjax>\sum_{k=1}^{t}k < n</anki-mathjax><br>即<anki-mathjax>t(t+1)/2 < n</anki-mathjax>，得<anki-mathjax>t=O(\sqrt{n})</anki-mathjax>	9
[15. 【2019统考真题】设n是描述问题规模的非负整数，下列程序段的时间复杂度是（ ）。<br>x=0;<br>while(n>=(x+1)*(x+1))<br>x=x+1;<br>A. <anki-mathjax>O(\log n)</anki-mathjax><br>B. <anki-mathjax>O(n^{1/2})</anki-mathjax><br>C. <anki-mathjax>O(n)</anki-mathjax><br>D. <anki-mathjax>O(n^{2})</anki-mathjax>]::(B)	循环终止条件为<anki-mathjax>(x+1)^{2} > n</anki-mathjax><br>执行次数<anki-mathjax>t</anki-mathjax>满足<anki-mathjax>t^{2} > n</anki-mathjax>，即<anki-mathjax>t=O(\sqrt{n})</anki-mathjax>	9
[16. 【2022统考真题】下列程序段的时间复杂度是（ ）。<br>int sum=0;<br>for(int i=1;i<n;i*=2)<br>for(int j=0;j<=i;j++)<br>sum++;<br>A. <anki-mathjax>O(\log n)</anki-mathjax><br>B. <anki-mathjax>O(n)</anki-mathjax><br>C. <anki-mathjax>O(n\log n)</anki-mathjax><br>D. <anki-mathjax>O(n^{2})</anki-mathjax>]::(B)	总执行次数<anki-mathjax>T = \sum_{k=0}^{\log_2 n} (2^k+1)</anki-mathjax><br>等比级数和<anki-mathjax>S=2^{t+1}-1 + t \approx 2n</anki-mathjax>（<anki-mathjax>t=\log_2n</anki-mathjax>）<br>故<anki-mathjax>O(n)</anki-mathjax>	9