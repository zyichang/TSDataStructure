[01. 下列关于广度优先算法的说法中，正确的是()。<br>I.当各边的权值相等时，广度优先算法可以解决单源最短路径问题<br>II.当各边的权值不等时，广度优先算法可用来解决单源最短路径问题<br>III.广度优先遍历算法类似于树中的后序遍历算法<br>IV.实现图的广度优先算法时，使用的数据结构是队列<br>A. I、IV<br>B. II、III、IV<br>C. II、IV<br>D. I、III、IV]::(A)	1. 广度优先算法在<strong>边权相等</strong>时可解决单源最短路径问题（I正确）<br>2. 权值不等时无法保证最短路径（II错误）<br>3. 广度优先遍历类似于<strong>层序遍历</strong>（III错误）<br>4. 使用队列实现（IV正确）	231
[02. 下列关于图的说法中，错误的是()。<br>I.对一个无向图进行深度优先遍历时，得到的深度优先遍历序列是唯一的<br>II.若有向图不存在回路，即使不用访问标志位，同一结点也不会被访问两次<br>III.采用深度优先遍历或拓扑排序算法可以判断一个有向图中是否有环（回路）<br>IV.对任何非强连通图必须2次或以上调用广度优先遍历算法才可访问所有的顶点<br>A. Ⅰ、Ⅱ、Ⅲ<br>B. Ⅱ、Ⅲ<br>C. Ⅰ、Ⅱ<br>D. Ⅰ、Ⅱ、Ⅳ]::(D)	1. 深度优先遍历序列<strong>不唯一</strong>（I正确，但题目要求选错误的，所以I是错误的说法？）<br>注：本题要求选择错误的说法。I说法错误（因为序列不唯一），II说法错误（没有访问标志位会重复访问），III说法正确（能判断环），IV说法错误（非强连通图可能一次广度遍历就访问所有顶点）。所以应选择包含I、II、IV的选项D。	232
[03. 对于一个非连通无向图G，采用深度优先遍历访问所有顶点，在DFStraverse函数（见考点讲解DFS部分）中调用DFS的次数正好等于（ ）。<br>A. 顶点数<br>B. 边数<br>C. 连通分量数<br>D. 不确定]::(C)	调用DFS的次数等于<strong>连通分量数</strong>（每次调用遍历一个连通分量）	232
[04. 对一个有n个顶点、e条边的图采用邻接表表示时，进行DFS遍历的时间复杂度为（ ），空间复杂度为（ ）；进行BFS遍历的时间复杂度为（ ），空间复杂度为（ ）。<br>A. O(n)<br>B. O(e)<br>C. O(n+e)<br>D. O(1)]::(C,A,C,A)	1. DFS/BFS时间复杂度：访问所有顶点和边 → <strong>O(n+e)</strong><br>2. 空间复杂度：使用栈/队列存储顶点 → <strong>O(n)</strong>	232
[05. 图的广度优先遍历算法中使用队列作为其辅助数据结构，那么在算法执行过程中，每个顶点的入队次数最多为（ ）。<br>A. 1<br>B. 2<br>C. 3<br>D. 4]::(A)	每个顶点最多入队<strong>一次</strong>（访问标记避免重复入队）	232
[06. 对有n个顶点、e条边的图采用邻接矩阵表示时，进行DFS遍历的时间复杂度为（ ），进行BFS遍历的时间复杂度为（ ）。<br>A. <anki-mathjax>O(n^{2})</anki-mathjax><br>B. O(e)<br>C. O(n+e)<br>D. <anki-mathjax>O(e^{2})</anki-mathjax>]::(A,A)	采用邻接矩阵时：<br>• 时间复杂度：需要访问整个矩阵 → <strong>O(n^2)</strong>	232
[07. 无向图<anki-mathjax>G=(V,E)</anki-mathjax>，其中<anki-mathjax>V=\{a,b,c,d,e,f\}</anki-mathjax>，<anki-mathjax>E=\{(a,b),(a,e),(a,c),(b,e),(c,f),(f,d),(e,d)\}</anki-mathjax>，对该图从a开始进行深度优先遍历，得到的顶点序列正确的是（ ）。<br>A. a,b,e,c,d,f<br>B. a,c,f,e,b,d<br>C. a,e,b,c,f,d<br>D. a,e,d,f,c,b]::(D)	正确序列：a→e→d→f→c→b<br>关键路径：a的邻接点有b、e、c；选择e（可先选e），然后e的邻接点有a、b、d；未被访问的是b、d；但根据规则，访问d，再访问d的邻接点f，然后f的邻接点c，最后访问b	232
[08. 如下图所示，在下面的5个序列中，符合深度优先遍历的序列个数是（ ）。<br>1. aebfdc<br>2. acfdeb<br>3. aedfcb<br>4. aefdbc<br>5. aecfdb<br>A. 5<br>B. 4<br>C. 3<br>D. 2]::(D)	只有序列1和4符合深度优先遍历规则<br>• 序列1: a->e->b->f->d->c (合理)<br>• 序列4: a->e->f->d->b->c (合理)	232
[09. 用邻接表存储的图的深度优先遍历算法类似于树的（ ），而其广度优先遍历算法类似于树的（ ）。<br>A. 中序遍历<br>B. 先序遍历<br>C. 后序遍历<br>D. 按层次遍历]::(B,D)	• 深度优先：类似于树的<strong>先序遍历</strong><br>• 广度优先：类似于树的<strong>按层次遍历</strong>	232
[10. 一个有向图G的邻接表存储如下图所示，从顶点1出发，对图G调用深度优先遍历所得顶点序列是（ ）；按广度优先遍历所得顶点序列是（ ）。<br>A. 125436<br>B. 124536<br>C. 124563<br>D. 362514]::(A,B)	深度优先：1->2->5->4->3->6 (选项A)<br>广度优先：1->2->4->5->3->6 (选项B)	232
[11. 无向图<anki-mathjax>G=(V,E)</anki-mathjax>，其中<anki-mathjax>V=\{a,b,c,d,e,f\}</anki-mathjax>，<anki-mathjax>E=\{(a,b),(a,e),(a,c),(b,e),(c,f),(f,d),(e,d)\}</anki-mathjax>。对该图进行深度优先遍历，不能得到的序列是（ ）。<br>A. acfdeb<br>B. aedfcb<br>C. aedfcb<br>D. abecdf]::(D)	• 选项D: a->b->e->c->d->f 错误，因为e与c无边（e的邻接点有a,b,d），所以从e无法直接访问c	232
[12. 判断有向图中是否存在回路，除拓扑排序外，还可以利用（ ）。<br>A. 求关键路径的方法<br>B. 求最短路径的Dijkstra算法<br>C. 深度优先遍历算法<br>D. 广度优先遍历算法]::(C)	深度优先遍历中若遇到<strong>回边</strong>（指向已访问过的祖先顶点的边），则有回路	232
[13. 设无向图<anki-mathjax>G=(V,E)</anki-mathjax>和<anki-mathjax>G'=(V',E')</anki-mathjax>，若<anki-mathjax>G'</anki-mathjax>是G的生成树，则下列说法错误的是（ ）。<br>A. G'为G的子图<br>B. G'为G的连通分量<br>C. G'为G的极小连通子图且<anki-mathjax>V=V'</anki-mathjax><br>D. G'是G的一个无环子图]::(B)	生成树是<strong>极小连通子图</strong>，不是极大（连通分量是极大连通子图）	232
[14. 图的广度优先生成树的树高比深度优先生成树的树高（ ）。<br>A. 小或相等<br>B. 小<br>C. 大或相等<br>D. 大]::(A)	广度优先生成树的高度<strong>不大于</strong>深度优先生成树的高度（因为BFS总是按层扩展）	232
[15. 【2012统考真题】对有n个顶点、e条边且使用邻接表存储的有向图进行广度优先遍历，其算法的时间复杂度是（ ）。<br>A. O(n)<br>B. O(e)<br>C. O(n+e)<br>D. O(ne)]::(C)	邻接表BFS时间复杂度：访问所有顶点和边 → <strong>O(n+e)</strong>	232
[16. 【2013统考真题】下列选项中，不是如下无向图的广度优先遍历序列的是（ ）。<br>A. h,c,a,b,d,e,g,f<br>B. e,a,f,g,b,h,c,d<br>C. d,b,c,a,h,e,f,g<br>D. a,b,c,d,h,e,f,g]::(D)	• 选项D：a访问后应访问所有邻接点（b,c,d,h），然后下一层访问e,f,g。但序列中a->b->c->d->h后马上e（中间跳过层），不符合广度优先遍历	232
[17. 【2015统考真题】设有向图<anki-mathjax>G=(V,E)</anki-mathjax>，顶点集<anki-mathjax>V=\{V_{0},V_{1},V_{2},V_{3}\}</anki-mathjax>，边集<anki-mathjax>E=\{<v_{0},v_{1}>,<v_{0},v_{2}>,<v_{0},v_{3}>,<v_{1},v_{3}>\}</anki-mathjax>。若从顶点<anki-mathjax>V_{0}</anki-mathjax>开始对图进行深度优先遍历，则可能得到的不同遍历序列个数是（ ）。<br>A. 2<br>B. 3<br>C. 4<br>D. 5]::(D)	遍历序列：<br>1. V0->V1->V3->V2<br>2. V0->V2->V1->V3<br>3. V0->V2->V3->V1<br>4. V0->V3->V1->V2<br>5. V0->V3->V2->V1<br>共5种	232
[18. 【2016统考真题】下列选项中，不是下图深度优先搜索序列的是（ ）。<br>A. <anki-mathjax>V_{1},V_{2},V_{3},V_{4},V_{5}</anki-mathjax><br>B. <anki-mathjax>V_{0},V_{3},V_{2},V_{5},V_{4}</anki-mathjax><br>C. <anki-mathjax>V_{1},V_{2},V_{5},V_{4},V_{3}</anki-mathjax><br>D. <anki-mathjax>V_{1},V_{2},V_{3},V_{4},V_{5}</anki-mathjax>]::(D)	序列D: V1->V2->V3->V4->V5 不可能，因为从V2无法直接访问V3（V2的邻接点有V1和V5，没有V3）	232