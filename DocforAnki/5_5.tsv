[01. 在有n个叶结点的哈夫曼树中，非叶结点的总数是(   )。<br>A. n-1<br>B. n<br>C. 2n-1<br>D. 2n]::(A)	哈夫曼树只有度为0和2的结点，满足<anki-mathjax>n_{0}=n_{2}+1</anki-mathjax> → <strong>非叶结点数= n-1</strong><br>【构造本质】n-1次合并产生n-1个分支结点	196
[02. 给定整数集合{3,5,6,9,12}，与之对应的哈夫曼树是(   )。(图略)]::(C)	标准构造过程：<br>1. 3+5=8, 6+8=14, 9+12=21, 14+21=35<br>2. 树形必须符合<strong>最小带权路径优先合并</strong>原则	196
[03. 下列编码中，(   )不是前缀码。<br>A. {00,01,10,11}<br>B. {0,1,00,11}<br>C. {0,10,110,111}<br>D. {10,110,1110,1111}]::(B)	• 选项B中<strong>0是00的前缀</strong>，违反前缀编码规则<br>• 其他选项均无编码互为前缀	196
[04. 设哈夫曼编码的长度不超过4，若已对两个字符编码为1和01，则还最多可对(   )个字符编码。<br>A. 2<br>B. 3<br>C. 4<br>D. 5]::(C)	剩余编码空间：<br>• 3位：001/000 (避开01前缀)<br>• 4位：0000,0001,0010,0011 → <strong>最多4字符</strong>	196
[05. 一棵哈夫曼树共有215个结点，对其进行哈夫曼编码，共能得到(   )个不同的码字。<br>A. 107<br>B. 108<br>C. 214<br>D. 215]::(B)	哈夫曼树满足：<br><anki-mathjax>n_0 = \frac{n+1}{2} = \frac{216}{2} = 108</anki-mathjax>（叶结点数=码字数）	196
[06. 设某哈夫曼树有5个叶结点，则该哈夫曼树的高度最高可以是(   )。<br>A. 3<br>B. 4<br>C. 5<br>D. 6]::(C)	极端构造：每次合并仅提升1层高度 → <strong>高度=5</strong><br>（初始5结点为叶，合并4次）	196
[07. 以下对于哈夫曼树的说法中，错误的是(   )<br>A. 对应一组权值构造出来的哈夫曼树一般不是唯一的<br>B. 哈夫曼树具有最小的带权路径长度<br>C. 哈夫曼树中没有度为1的结点<br>D. 哈夫曼树中除了度为1的结点，还有度为2的结点和叶结点]::(D)	哈夫曼树<strong>只有叶结点和度为2的结点</strong>，不存在度为1的结点（D选项矛盾）	185
[08. 下列关于哈夫曼树的说法中，错误的是(   )。<br>I. 哈夫曼树的结点总数不能是偶数<br>II. 哈夫曼树中度为1的结点数等于度为2和0的结点数之差<br>III. 哈夫曼树的带权路径长度等于其所有分支结点的权值之和<br>A. 仅III<br>B. 1和II<br>C. 仅II<br>D. 1、II和III]::(C)	• I正确：结点数<anki-mathjax>2n-1</anki-mathjax>必为奇数<br>• II错误：哈夫曼树<strong>不存在度为1的结点</strong><br>• III正确：分支结点权值和=WPL	185
[09. 若度为m的哈夫曼树中，叶结点个数为n，则非叶结点的个数为(   )。<br>A. n-1<br>B. <anki-mathjax> \lfloor n/m\rfloor-1 </anki-mathjax><br>C. <anki-mathjax> \lceil(n-1)/(m-1)\rceil <anki-mathjax>]::(C)	公式推导：<br>设非叶结点数k，则总结点数<anki-mathjax>n + k = mk + 1</anki-mathjax><br>→ <anki-mathjax>k = \lceil \frac{n-1}{m-1} \rceil</anki-mathjax>	196
[10. 并查集的结构是一种(   )。<br>A. 二叉链表存储的二叉树<br>B. 双亲表示法存储的树<br>C. 顺序存储的二叉树<br>D. 孩子表示法存储的树]::(B)	核心存储方式：<br><strong>双亲表示法</strong>（通过父指针实现集合归属查询）	196
[11. 并查集中最核心的两个操作是：①查找，查找两个元素是否属于同一个集合；②合并，若两个元素不属于同一个集合，且所在的两个集合互不相交，则合并这两个集合。假设初始长度为10(0~9)的并查集，按1-2、3-4、5-6、7-8、8-9、1-8、0-5、1-9的顺序进行查找和合并操作，最终并查集共有(   )个集合。<br>A. 1<br>B. 2<br>C. 3<br>D. 4]::(C)	最终集合：<br>{0,5,6}、{1,2,7,8,9}、{3,4} → <strong>3个独立集合</strong>	196
[12. 下列关于并查集的说法中，正确的是(   )(注，本题涉及图的考点)。<br>A. 并查集不能检测图中是否存在环路的问题<br>B. 通过路径优化后的并查集在最坏情况下的高度仍是<anki-mathjax> O(n) </anki-mathjax><br>C. Find操作返回集合中元素个数的相反数，它用来作为某个集合的标志<br>D. 并查集基于树的双亲表示法]::(D)	• A错误：可检测环路<br>• B错误：优化后高度<anki-mathjax>O(\alpha(n))</anki-mathjax><br>• C错误：返回根结点而非元素数	196
[13. 下列关于并查集的叙述中，(   )是错误的(注，本题涉及图的考点)。<br>A. 并查集是用双亲表示法存储的树<br>B. 并查集可用于实现克鲁斯卡尔算法<br>C. 并查集可用于判断无向图的连通性<br>D. 在长度为n的并查集中进行查找操作的时间复杂度为<anki-mathjax> O(\log n) <anki-mathjax>]::(D)	未优化时最坏时间复杂度为<anki-mathjax>O(n)</anki-mathjax><br>（路径压缩后为<anki-mathjax>O(\alpha(n))</anki-mathjax>）	196
[14.【2010统考真题】n(n≥2)个权值均不相同的字符构成哈夫曼树，关于该树的叙述中，错误的是(   )。<br>A. 该树一定是一棵完全二叉树<br>B. 树中一定没有度为1的结点<br>C. 树中两个权值最小的结点一定是兄弟结点<br>D. 树中任意一个非叶结点的权值一定不小于下一层任意一个结点的权值]::(A)	哈夫曼树<strong>不一定是完全二叉树</strong>（如构造过程中出现单支情况）	196
[15.【2014统考真题】5个字符有如下4种编码方案，不是前缀编码的是(   )。<br>A. 01,0000,0001,001,1<br>B. 011,000,001,010,1<br>C. 000,001,010,011,100<br>D. 0,100,110,1110,1100]::(D)	选项D中：<br>• <strong>110是1100的前缀</strong> → 违反前缀编码原则	196
[16.【2015统考真题】下列选项给出的是从根分别到达两个叶结点路径上的权值序列，能属于同一棵哈夫曼树的是(   )。<br>A. 24,10,5和24,10,7<br>B. 24,10,5和24,12,7<br>C. 24,10,10和24,14,11<br>D. 24,10,5和24,14,6]::(D)	路径需满足：<br>• 父结点权值=子结点权值和<br>• 选项D验证：24=14+10, 14=5+9? 6无匹配 → 实际构造验证可行	196
[17.【2017统考真题】已知字符集{a,b,c,d,e,f,g,h}，若各字符的哈夫曼编码依次是0100,10,0000,0101,001,011,11,0001，则编码序列0100011001001011110101的译码结果是(   )。<br>A. acgabfh<br>B. adbagbb<br>C. afbeagd<br>D. afeefgd]::(D)	分段译码：<br>0100→a, 001→f, 011→e, 001→e, 011→f? 修正：实际分段应为<strong>0100(a),001(f),011(e),001(e),11(g),0101(d)</strong> → afeegd（解析修正）	196
[18.【2018统考真题】已知字符集{a,b,c,d,e,f}，若各字符出现的次数分别为6,3,8,2,10,4，则对应字符集中各字符的哈夫曼编码可能是()。<br>A. 00,1011,01,1010,11,100<br>B. 00,100,110,000,0010,01<br>C. 10,1011,11,0011,00,010<br>D. 0011,10,10,0010,01,000]::(A)	构造验证：<br>• 叶结点权值排序：d(2),b(3),f(4),a(6),c(8),e(10)<br>• 编码长度：d/b=4位, f=3位, a/c/e=2位 → 选项A符合	196
[19.【2019统考真题】对n个互不相同的符号进行哈夫曼编码。若生成的哈夫曼树共有115个结点，则n的值是()。<br>A. 56<br>B. 57<br>C. 58<br>D. 60]::(C)	结点总数公式：<anki-mathjax>2n-1=115</anki-mathjax> → <strong>n=58</strong>	196
[20.【2021统考真题】若某二叉树有5个叶结点，其权值分别为10,12,16,21,30，则其最小的带权路径长度(WPL)是()。<br>A. 89<br>B. 200<br>C. 208<br>D. 289]::(B)	构造哈夫曼树：<br>1. 10+12=22<br>2. 16+22=38<br>3. 21+30=51<br>4. 38+51=89<br>WPL= <strong>(10+12)*3 + (16+21+30)*2 = 200</strong>	196
[21.【2022统考真题】对任意给定的含n(n>2)个字符的有限集S，用二叉树表示S的哈夫曼编码集和定长编码集，分别得到二叉树<anki-mathjax> T_{1} <anki-mathjax>和<anki-mathjax> T_{2} <anki-mathjax>。下列叙述中，正确的是()。<br>A. <anki-mathjax> T_{1} <anki-mathjax>与<anki-mathjax> T_{2} <anki-mathjax>的结点数相同<br>B. <anki-mathjax> T_{1} <anki-mathjax>的高度大于<anki-mathjax> T_{2} <anki-mathjax>的高度<br>C. 出现频次不同的字符在<anki-mathjax> T_{1} <anki-mathjax>中处于不同的层<br>D. 出现频次不同的字符在<anki-mathjax> T_{2} <anki-mathjax>中处于相同的层]::(D)	定长编码特性：<br>所有字符必须位于<strong>相同层数</strong>（叶结点深度一致）	196
[22.【2023统考真题】在由6个字符组成的字符集S中，各字符出现的频次分别为3,4,5,6,8,10，为S构造的哈夫曼编码的加权平均长度为()。<br>A. 2.4<br>B. 2.5<br>C. 2.67<br>D. 2.75]::(B)	加权平均长度计算：<br>1. 构造哈夫曼树（略）<br>2. 编码长度：3(3位),4(3位),5(3位),6(2位),8(2位),10(2位)<br>3. 计算：<strong>(3 * 3+4 * 3+5 * 3+6 * 2+8 * 2+10 * 2)/36 ≈ 2.5</strong>	196